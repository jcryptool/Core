DummyAction.13=Signature stored
DummyAction.14=The signature was saved at:\n
DummyAction.2=This is a demonstration of the FlexiProvider implementation "
DummyAction.3=".\n
DummyAction.8=The algorithm could not be found\!
DummyAction.error=Error
DummyAction.encryption=\ \u2014 encryption
DummyAction.message_authentification_code=\ \u2014 message authentication code
DummyAction.message_digest=\ \u2014 hash value
DummyAction.random_number_generator=\ \u2014 random number generator
DummyAction.signature=\ \u2014 signature
DummyWizardPage.0=Please choose a file where the signature is stored
DummyWizardPage.13=Mode:
DummyWizardPage.14=Padding:
DummyWizardPage.16=Key (hex)
DummyWizardPage.17=Select key:
DummyWizardPage.18=Signature file
DummyWizardPage.19=File:
DummyWizardPage.2=Mode and Padding Scheme
DummyWizardPage.20=Open...
DummyWizardPage.21=Error
DummyWizardPage.22=The file already exists\!
DummyWizardPage.24=The file doesn't exists\!
DummyWizardPage.27=Filter
DummyWizardPage.28=Binary output (into hexeditor)
DummyWizardPage.29=Output size
DummyWizardPage.3=Operation
DummyWizardPage.30=Size:
DummyWizardPage.31=Output as characters out of the following alphabet (into texteditor)
DummyWizardPage.34=Output as numbers in the given range (into texteditor)
DummyWizardPage.35=Pad numbers with zeros
DummyWizardPage.4=Verify
DummyWizardPage.5=Encrypt
DummyWizardPage.6=Please choose a file where the signature is stored
DummyWizardPage.7=Sign
DummyWizardPage.8=Decrypt
DummyWizardPage.9=Please choose a file where the signature should be saved
DummyWizardPage.key.key=key
DummyWizardPage.key.private=private key
DummyWizardPage.key.public=public key
DummyWizardPage.key.secret=secret key
IntegratorAction.0=Result of verification
IntegratorAction.1=Checksum is valid!
IntegratorAction.2=Result of verification
IntegratorAction.3=Checksum is invalid!\nCalculated: {0} \n Expected: {1}
IntegratorAction.titlemask-cryptosystem=To en- or decrypt a message with the %s algorithm, choose a key from the keystore (or create a new key pair)
IntegratorAction.titlemask-cryptosystem-padding=To en- or decrypt a message with the %s algorithm, choose a key (manually, from \nthe key store, or a newly created key) and pick a padding and block cipher mode.
IntegratorAction.titlemask-digest=Create a message digest with the %s algorithm.
IntegratorAction.titlemask-mac=Creates a message authentication code with the %s algorithm and writes it to a new hex editor tab. The key \ncan be created by hand or selected from the key store.
IntegratorAction.titlemask-PRNG=To generate pseudo-random data with the %s algorithm, please choose \nthe amount of data to be generated and your preferred output format.
IntegratorAction.titlemask-signature=The %s algorithm is used to either sign the content of the current active editor and then save the generated \nsignature to a file, or to verify whether a given DSA signature match with the content of the current active editor.
InputType=<Active Editor>
IntegratorWizardPage.0=Create
IntegratorWizardPage.1=Verify
IntegratorWizardPage.2=Checksum to verify
IntegratorWizardPage.3=Expected checksum of the content:
IntegratorWizardPage.4=Save...
IntegratorWizardPage.createNewKeypairButton=Create a new key pair in the keystore
IntegratorWizardPage.generatingButtonHint=calculating the key pair... (details: progress view)
IntegratorWizardPage.newSymmetricKeyButtonlabel=Create a new key in the keystore
IntegratorWizardPage.newSymmetricKeyButtontip=The key will remain in the keystore for later use.
IntegratorWizardPage.noFurtherInputNeeded=This algorithm does not need any further input.\nClick the 'Finish' button to display the message digest in a new editor.
IntegratorWizardPage.noKeyFound=No key that fits this operation was found in the keystore.
IntegratorWizardPage.or=or:
IntegratorWizardPage.willRemainInKeystore=The key pair will remain in the keystore for later use.
IntegratorWizardPage.youChoseNewKeyLabel=You have chosen this newly created key from the keystore:
KeySelectionGroup.KeySource=Key source
KeySelectionGroup.CustomKey=Custom key
KeySelectionGroup.KeyFromKeystore=Key from keystore
CustomKey.Title=Custom key
CustomKey.KeyLength=Key length:
KeyFromKeystore.Title=Keystore
NewKeyComposite.key_label=Key
NewKeyComposite.keypair=Key pair
NewKeyComposite.owner=Owner:
NewKeyComposite.pkeypart=\ (public key part)
NewKeyComposite.privkeypart=\ (private key part)
NewKeyComposite.removeKeypairBtn=Remove (from the keystore and here)
